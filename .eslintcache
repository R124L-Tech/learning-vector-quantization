[{"C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\index.js":"1","C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\App.js":"3","C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\components\\Tabs.js":"4","C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\components\\Header.js":"5","C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\components\\Panel.js":"6","C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\components\\lvq.js":"7","C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\components\\Modal.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":269,"mtime":1612425830240,"results":"12","hashOfConfig":"10"},{"size":5713,"mtime":1612769244547,"results":"13","hashOfConfig":"10"},{"size":320,"mtime":1612341514605,"results":"14","hashOfConfig":"10"},{"size":2772,"mtime":1612752884429,"results":"15","hashOfConfig":"10"},{"size":2244,"mtime":1612769929843,"results":"16","hashOfConfig":"10"},{"size":3986,"mtime":1612769929855,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"79av1h",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\index.js",[],["36","37"],"C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\App.js",[],"C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\components\\Tabs.js",["38","39"],"C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\components\\Header.js",[],"C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\components\\Panel.js",[],"C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\components\\lvq.js",[],"C:\\Users\\User\\Documents\\VSCODE\\learning-vector-quantization\\src\\components\\Modal.js",["40"],"import Button from '@material-ui/core/Button';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { test } from './lvq'\r\n\r\nconst Modal = ({ display, onClick, updateDataTest, weights }) => {\r\n    const [inputs, setInputs] = useState([])\r\n    const inputFields = [useRef(), useRef(), useRef(), useRef(), useRef(), useRef(),]\r\n\r\n    let displayNone = onClick\r\n    const onSave = () => {\r\n        setInputs(inputFields.map(i => parseInt(i.current.value)))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (inputs.length !== 0) {\r\n            updateDataTest(d => [[inputs, test(inputs, weights)], ...d])\r\n        }\r\n    }, [inputs])\r\n\r\n    const onExit = () => {\r\n        displayNone()\r\n        inputFields.map(e => e.current.value = '')\r\n    }\r\n    return (\r\n        <div\r\n            style={{\r\n                display: display,\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100vh',\r\n                backgroundColor: '#00000046',\r\n                zIndex: 999,\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            {/* MODAL-CONTENT-CONTAINER */}\r\n            <div style={{\r\n                width: '80%',\r\n                border: '2px solid gray',\r\n                borderRadius: 10\r\n            }}>\r\n                {/* HEAD */}\r\n                <div\r\n                    style={{\r\n                        borderBottom: '2px solid gray',\r\n                        display: 'flex',\r\n                        justifyContent: \"space-around\",\r\n                        backgroundColor: '#0f0f0f',\r\n                        borderRadius: '10px 10px 0 0',\r\n                        padding: 10,\r\n                        color: 'white',\r\n                    }}>\r\n                    Masukkan data Test\r\n                </div>\r\n                {/* BODY */}\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        backgroundColor: '#161616',\r\n                        borderRadius: '0 0 10px 10px',\r\n                        padding: 10,\r\n                        color: 'white',\r\n                    }}>\r\n                    {/* INPUT */}\r\n                    {/* TEXTFIELDS */}\r\n                    <div style={{ marginBottom: 10, ...styles.wraper }}>\r\n                        {inputFields.map(input => {\r\n                            return (<input ref={input} type=\"text\" style={styles.input} />)\r\n                        })}\r\n                    </div>\r\n\r\n                    {/* BUTTONS */}\r\n                    <div style={styles.wraper}>\r\n                        <Button\r\n                            style={{ width: '60%', backgroundColor: '#03DAC6', ...styles.buttons }}\r\n                            onClick={onSave}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                        <Button\r\n                            style={{ width: '40%', borderRadius: 0, ...styles.buttons }}\r\n                            onClick={onExit}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                        >\r\n                            Close\r\n                        </Button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    input: {\r\n        backgroundColor: 'white',\r\n        width: '15%',\r\n        border: 'none',\r\n        padding: 3,\r\n        borderRadius: 3,\r\n        fontSize: 18,\r\n        textAlign: 'center'\r\n    },\r\n    wraper: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n    },\r\n    buttons: {\r\n        borderRadius: 0,\r\n        padding: 3,\r\n        fontSize: 14\r\n    }\r\n}\r\n\r\nexport default Modal\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"49","line":1,"column":28,"nodeType":"47","messageId":"48","endLine":1,"endColumn":37},{"ruleId":"50","severity":1,"message":"51","line":19,"column":8,"nodeType":"52","endLine":19,"endColumn":16,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'createRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'updateDataTest' and 'weights'. Either include them or remove the dependency array. If 'updateDataTest' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [inputs, updateDataTest, weights]",{"range":"59","text":"60"},[663,671],"[inputs, updateDataTest, weights]"]